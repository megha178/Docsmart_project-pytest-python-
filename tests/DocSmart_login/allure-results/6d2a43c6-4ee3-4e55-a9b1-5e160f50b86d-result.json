{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6043CEEA2+31554]\n\t(No symbol) [0x00007FF604347ED9]\n\t(No symbol) [0x00007FF60420872A]\n\t(No symbol) [0x00007FF604258434]\n\t(No symbol) [0x00007FF60425853C]\n\t(No symbol) [0x00007FF60429F6A7]\n\t(No symbol) [0x00007FF60427D06F]\n\t(No symbol) [0x00007FF60429C977]\n\t(No symbol) [0x00007FF60427CDD3]\n\t(No symbol) [0x00007FF60424A33B]\n\t(No symbol) [0x00007FF60424AED1]\n\tGetHandleVerifier [0x00007FF6046D8B1D+3217341]\n\tGetHandleVerifier [0x00007FF604725AE3+3532675]\n\tGetHandleVerifier [0x00007FF60471B0E0+3489152]\n\tGetHandleVerifier [0x00007FF60447E776+750614]\n\t(No symbol) [0x00007FF60435375F]\n\t(No symbol) [0x00007FF60434EB14]\n\t(No symbol) [0x00007FF60434ECA2]\n\t(No symbol) [0x00007FF60433E16F]\n\tBaseThreadInitThunk [0x00007FFD649C257D+29]\n\tRtlUserThreadStart [0x00007FFD65A6AF28+40]", "trace": "self = <tests.DocSmart_login.test_docsmartlogin.TestDocSmart object at 0x000001EB8B689B50>\nlogin = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"db62c3ec5ca9ca4575efc7add8cc669d\")>\n\n       @pytest.mark.smoke\n      # @pytest.mark.usefixtures(\"setup\")\n       @pytest.mark.usefixtures(\"driver_init\")\n       @pytest.mark.usefixtures(\"login\")\n    \n    #   @pytest.mark.parametrize(\"browser_name\", [\"chrome\"])\n       def test_valid_login(self,login):\n          # driver = driver_init\n           driver = login\n           loginPage = LoginPage(driver)\n>          loginPage.login_patient(user=\"7021656297\", pwd=\"Admin@123\")\n\ntest_docsmartlogin.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\src\\pageObjects\\loginPage.py:48: in login_patient\n    self.get_login_button_hp().click()\n..\\..\\src\\pageObjects\\loginPage.py:22: in get_login_button_hp\n    return WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"db62c3ec5ca9ca4575efc7add8cc669d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001EB8C6B0400>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6043CEEA2+31554]\nE       \t(No symbol) [0x00007FF604347ED9]\nE       \t(No symbol) [0x00007FF60420872A]\nE       \t(No symbol) [0x00007FF604258434]\nE       \t(No symbol) [0x00007FF60425853C]\nE       \t(No symbol) [0x00007FF60429F6A7]\nE       \t(No symbol) [0x00007FF60427D06F]\nE       \t(No symbol) [0x00007FF60429C977]\nE       \t(No symbol) [0x00007FF60427CDD3]\nE       \t(No symbol) [0x00007FF60424A33B]\nE       \t(No symbol) [0x00007FF60424AED1]\nE       \tGetHandleVerifier [0x00007FF6046D8B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF604725AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF60471B0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF60447E776+750614]\nE       \t(No symbol) [0x00007FF60435375F]\nE       \t(No symbol) [0x00007FF60434EB14]\nE       \t(No symbol) [0x00007FF60434ECA2]\nE       \t(No symbol) [0x00007FF60433E16F]\nE       \tBaseThreadInitThunk [0x00007FFD649C257D+29]\nE       \tRtlUserThreadStart [0x00007FFD65A6AF28+40]\n\n..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1719681173045, "stop": 1719681186838, "uuid": "fdea3f4f-65df-42f4-a203-de3996ee932d", "historyId": "9f645ef790a70c21359ca9f30608e612", "testCaseId": "9f645ef790a70c21359ca9f30608e612", "fullName": "tests.DocSmart_login.test_docsmartlogin.TestDocSmart#test_valid_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('login')"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.DocSmart_login"}, {"name": "suite", "value": "test_docsmartlogin"}, {"name": "subSuite", "value": "TestDocSmart"}, {"name": "host", "value": "DESKTOP-RNQDI0M"}, {"name": "thread", "value": "23504-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.DocSmart_login.test_docsmartlogin"}]}